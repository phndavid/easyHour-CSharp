<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tabSelecArchivo.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="metroButton4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAU1JREFUWEft
        1sEqBVEcx/GRjZLyJDd5AlFYWEtZiIU8gq2VpaJ4AKm7tZGytLG2Y2VnwwIJJXx/Naem03/mzJk5k2R+
        9anbObc5vztzOnOzPn3+WpZwhje8F7xgHZ1mCt8VvrCBznIEa2HnEslLDLCPIR5gLewsYhfJSuzAWqiM
        CihJSozhEdZC8oRPb2wTLq1LzKF4cd8VVlEscYcVaLPKKRqX0O0sLuhTAcUvYdH8OKISKnANlzolJhGV
        UAHRoeQSKtFJAbmHnr185GOWpAVeoc1lzZVJWkA7fc8bC0laYAbb3lhI6wJ6253ndDwv558vUOdxtC5w
        CCuj0JlQ/K7lVx+B/i/oaI9KygIniE5VAb0ldc5bc75bTCM687AuWIc25hZmMYJGmcAzrAVCFpAkB7AW
        qHKDxr/aim7jMdwZUEZ7Yg3Ru73Pf0+W/QBsdlAeXwErRgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnGenerar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAE
        7AAABOwBim79cgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAD2SURBVFhH7dSx
        DcIwEAXQExUSFVswAaJMlVVoWQSJMViAFWgZARpmoDT/o1hcwiW6FL4GIz0p/tj+J0WKpJRM+DXAB2qs
        PVO8582QvBeM8Z43Q/JeMMZ7/vsgsoU9HGANvQu6jP95TJ1nx1b1ygoukDfTBoYXMNN7pnjOs5PdcuwC
        LWIAYrfcVZBx8wKWHT7PHcBznt0/IT3hMcDM2muZc94MI5lhJDOMZIaRzDCSGUbqLc6wK4wdurO3OOVv
        dCnsUH2fQC/qAHWAOkAdoA7wnwO81OIG3FASO3Ifu+WqgmjsllYF0dr8XjgEp9GvoxR2sKtNKckbtfCi
        CS8vcagAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnHome.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAcCAYAAAAAwr0iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAQ
        ZAAAEGQBA2nK9QAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAIzSURBVEhL7dY/
        aBRBFMfxVWIK/yWdJohiUqmkUBAjQSslgiAptBAtVBAULKwCERQlKgQVrAURbUwThBBUEgJil8JERS1s
        jAmI4h+IEf/j+f2db8LM3ezmErYRbuAD997s23l7O7t3SaFQmDfGftxHXWy+EtFkJRhd+AMFT9EYO242
        0WQWRg2uQYHvNdbFarJEk2kYy3APbtFHOAP3TXxEW6TuIR6blmDOD7IwGjEGBdKHxTa3D9+h4Bs6SmrV
        mKtrDeb8IA2jBRN2ArmABdiMo3bMNnyCgt845tW/t7zMrQHGDkxZsa7yoOX1BOhqFfRADa2H9oJy0m3H
        vvVyW4Lz+0EpxmH8tMJ32AotdN5yvtuohW6V7rXLX8defLG4sm+Acc4KRI/ZGizBHcvFPEA9tFmHLCcD
        UPOTyG6AsQg34Yr7sRRq4InlsjzHaug8tywnI9iAVcF6QcAbDcNwRZewEG3QLXD52bzBRjvnRcvJS6wN
        1pz58K/rZ1DwA0csr32gWMFcTKPdznEcejIUaEMWmyvO2QGboK4VfMB26MqvWG6+fsFdyB58hYLP2Gn5
        ZDfcDn2BJizHXcvl4awt1gr3TtDTdQDJVbyCXi7avc1QI/4J8nAD+h1pwGWM4vTMHnAYep5Li/NS3BPB
        emWJJOn1CvK2q2y9skS1gf+kgUEc8pyC/5ObJrcGgve51XV682lya2BlpO6kN5+m2kC1gYoa8P+KpVkR
        qTsB/WlNM47msK6Q/AUnYo79JcWw6QAAAABJRU5ErkJggg==
</value>
  </data>
</root>